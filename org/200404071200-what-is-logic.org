:PROPERTIES:
:ID:       B8C6402D-CEF3-4D82-9F21-210001145472
:SLUG:     what-is-logic
:END:
---
title: What is logic?
tags: essays
---

Logic is a sure way of finding the relationship between a set of
statements.

For example, if I know that my cat is fuzzy, and fuzzy cats always shed,
then I also "know" that my cat will shed. This may seem obvious, but
only because the example is simple.

Put another way, the sentence "my cat will shed" is /implicit/, given
the first two sentences "my cat is fuzzy" and "fuzzy cats always shed".

In a way, it's hidden there; it's between the lines; it's really there,
you just can't see it yet.

Logic is a light, that can shine into the darkness between statements.
It can root out hidden conclusions with perfect accuracy, because that's
what it does. Assuming your initial sentences make sense, logic /will/
find any hidden sentences that also make sense.

How can this be? It works because logic relies on the special meaning of
words like "always", "sometimes" and "never". These words -- when spoken
accurately -- contain /very/ potent pieces of information.

For example, if I say that I sometimes eat ice cream, you automatically
know two things for certain:

1. I have eaten ice cream before.
2. I am not always engaged in eating ice cream. What you /don't/ know,
   is that:
3. I will eat ice cream again.
4. I also eat other things besides ice cream.

For many people, the statement "I sometimes eat ice cream" implies 1, 2,
3 and 4. But logic is very precise, and this precision is what allows it
work. In logic, you only know that my statement means 1 and 2 -- not 3
and 4 -- because of the rigid definition of the word "sometimes".

There are many special words and phrases (such as: always, never, at
least once, sometimes, etc.), and different ways of building connections
between them. Some are connections between if/then statements, and
others look are derivations like the example of my cat being fuzzy.

Anyway, learning logic is basically a process of:

** Learning what certain key words really mean.
:PROPERTIES:
:CUSTOM_ID: learning-what-certain-key-words-really-mean.
:END:
For example, if I say, "All the women I've ever killed loved me very
much": I'm not actually admitting anything. Because the number of women
I've killed is zero, so whatever I say about them is not false, because
there is no counter-example. We say the set is "empty".

** Learning what correlations imply what.
:PROPERTIES:
:CUSTOM_ID: learning-what-correlations-imply-what.
:END:
If I say "all A is B" and "all B is C", logic defines the result to be
"all A is C". This is syllogistic logic, of the "Barbara" form (you're
bound to run into that soon).

** Learning how to evaluate an argument's validity.
:PROPERTIES:
:CUSTOM_ID: learning-how-to-evaluate-an-arguments-validity.
:END:
What if I'd ended my example above by saying, "All A is D". How do you
know it's NOT true? The test of a correctly executed piece of logic is
something to be learned. "Invalid" results, which are made to look
"cogent", but are really "specious", are what we call "fallacies".

** Learning how to evaluate an argument's worth.
:PROPERTIES:
:CUSTOM_ID: learning-how-to-evaluate-an-arguments-worth.
:END:
A valid argument simply means the terms fit into place as they should.
But do the terms themselves make sense? No one can dispute that my cat
is fuzzy, but what if I were using logic with statements far more vague?
How can I tell how much more vagueness has crept into my results?

** Learning other types of associations.
:PROPERTIES:
:CUSTOM_ID: learning-other-types-of-associations.
:END:
In the statement, "If I go to the store, I will buy candy", there is a
piece of evidence, which you can link to other statements, such as, "If
I buy candy, I will eat it". You now have the ingredients necessary to
derive a valid logical conclusion: "If I go to the store, it will result
in my eating candy."

And so on. Logic also gets into proofs (formal presentations of your
logical derivations), using logic to manipulate symbolic terms, etc.

You will also find that logic is very close to mathematics, and in fact,
there is a stage at which some mathematical symbols are even used. Math
doesn't deal with ideas such as "if/then", but computer programming sure
does. Logic is a fundamental tool for discerning unstated information
from raw data. At this, it excels, and is one of the foundations of
human knowledge.

There are many things it cannot do, however, as you've likely seen on
this newsgroup. While it can derive conclusions from valid input, it
cannot be used to prove the validity of that input. This would be like
"asserting" that what you say is true because you say it. Logic can be
applied in circular situations, where it likewise fails. It cannot
derive meaning from meaningless statements. As a tool, it's a wonderful
thing, but it's scope is limited. It has tremendous breadth of
application in human life, but can go no deeper than its wielder's eye.

This is my own poor summary of logic, from someone who finished only the
first course. Most of what I understand today is derived from other
understandings (pun fully intended). I hope it offers you something.
